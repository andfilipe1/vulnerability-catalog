# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-14 19:10
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(help_text='The system which has the vulnerability.', max_length=64)),
                ('owner', models.CharField(help_text='The system owner or responsible.', max_length=64)),
                ('owner_email', models.EmailField(max_length=64)),
                ('environment', models.CharField(help_text='Ex: Datacenter, Local server, Cloud, etc.', max_length=64)),
                ('perimeter', models.CharField(choices=[('Internal', 'Internal'), ('External', 'External')], max_length=8)),
                ('technology', models.CharField(help_text='Ex: ASP.NET, Joomla, PHP, Java, Apache, etc.', max_length=64)),
                ('system_type', models.CharField(help_text='WEB application, Windows Server, Linux Server, Mobilie application, etc.', max_length=64)),
                ('vulnerability', models.CharField(help_text='The vulnerability name, as reported by the researchers.', max_length=64)),
                ('category', models.CharField(help_text='Please, refer to https://www.owasp.org/index.php/Category:Vulnerability for a list of such categories.', max_length=64)),
                ('synopsis', models.CharField(help_text='Short description of the vulnerability. Hint: try to focus in the risks associated with the vulnerability.', max_length=256)),
                ('cvss_score', models.IntegerField(default=0, help_text='Please, refer to https://www.first.org/cvss/calculator/3.0 to calculate it properly.')),
                ('identification_date', models.DateField()),
                ('source_report', models.CharField(blank=True, default='', help_text='Optional. The company, research team or pentester which found the vulnerability.', max_length=256)),
                ('risk', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=6)),
                ('observation', models.CharField(blank=True, default='', help_text='Optional. Any observation pointed by the researcher when comment this vulnerability.', max_length=256)),
                ('remediation', models.CharField(blank=True, default='', help_text='Optional. The remediation suggested by the researchers or the action taken against the vulnerability.', max_length=256)),
                ('risk_acceptance_reason', models.CharField(blank=True, default='', help_text='Optional. A justification, case your team decides to accept the risks related to this vulnerability.', max_length=256)),
                ('remediation_deadline', models.DateField()),
                ('status', models.CharField(choices=[('Solved', 'Solved'), ('Notified', 'Notified'), ('Accepted', 'Accepted'), ('Mitigated', 'Mitigated'), ('Unknow', 'Unknow')], max_length=9)),
                ('report_file', models.CharField(blank=True, default='', help_text='Optional. The report file for further reference.', max_length=64)),
                ('report_page', models.IntegerField(blank=True, default=0, help_text='Optional. The report page number which describes the vulnerabity.')),
            ],
            options={
                'verbose_name_plural': 'vulnerabilities',
            },
        ),
    ]
