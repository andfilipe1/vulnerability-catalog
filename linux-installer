#!/bin/bash

check_system_reqs() {

MISSING=0
#### System requirements:
#### python3 https://wiki.python.org/moin/Python2orPython3
if [[ ! $(command -v python3 2>/dev/null) ]]; then
  MISSING=1
  echo -e "\nMissing python3 (https://www.python.org) support.\nPlease, install it from your package manager.\n"
  echo -e "If you are running it at Ubuntu, consider to do\n\n  sudo apt install python3\n\n"
fi

### pip3:
if [[ ! $(command -v pip3 2>/dev/null) ]]; then
  echo -e "\nMissing pip3 (https://pypi.python.org/pypi/pip) support.\nAlthough not necessary, it will help you a lot.\nPlease, consider to install it from your package manager.\n"
  echo -e "If you are running it at Ubuntu, consider to do\n\n  sudo apt install python3-pip\n\n"
fi

#### django (1.10.2) https://docs.djangoproject.com
if ! $(python3 -c 'import django' 2>/dev/null) ; then
  MISSING=1
  echo -e "\nMissing django (https://docs.djangoproject.com) support.\nYou can try:\n\$ pip3 install django\nand then\n\$ pip3 install --upgrade pip"
fi

#### django-chartjs (1.2)  https://github.com/novagile/django-chartjs
#if ! $(python3 -c 'import django-charts' 2>/dev/null) ; then
#  MISSING=1
#  echo -e "Missing django-charts (https://github.com/novagile/django-chartj) support.\nYou can try:\n\$ pip3 install django-charts.\n"
#fi

if [[ $MISSING != 0 ]]; then
  echo -e "\nPlease, meet all the requirements first. Exiting.\n"
  exit 1
fi
}

#### Global variables:
project_name=base
base_dir=$(pwd)

#### Cleaning previous versions. Be careful.
if [[ -d $project_name ]]; then
    rm -rf $project_name
fi

start_project() {
#### Starting project construction:
django-admin startproject $project_name
cd $project_name
}

start_app() { # No parameters need.
#### Starting the $1 app into the project:
python3 manage.py startapp $1
}

setting_project_urls() {
#### Setting the project urls properly into the main project:
url_tmpl_file=$base_dir/metadata/urls/admin/urls.py
cp $url_tmpl_file $project_name/urls.py
}

add_app_to_project() { # pass app_name as a parameter.
#### Add apps into the main project:
_class_app_name_config_=$(echo $1 | sed -e 's/\b\(.\)/\u\1/g')Config # Class names start by uppercase.
_str_="'$1.apps.$_class_app_name_config_'," 
sed -i -e "/INSTALLED_APPS/a \    $_str_" $project_name/settings.py # inserting above 'urlpatters' line.
}

defining_datamodel(){ # pass app_name as a parameter.
#### Defining the $1 DATAMODEL structure:
models_dir=$1
models_file=$models_dir/models.py
models_tmpl_file=$base_dir/metadata/models/$1/models.py

cp $models_tmpl_file $models_file
}

setting_app_urls(){ # pass app_name as a parameter.
#### Setting URLs for the new app: $1/urls.py
url_tmpl_file=$base_dir/metadata/urls/$1/urls.py

cp $url_tmpl_file $1/urls.py
}

setting_app_views() { # pass app_name as a parameter.
#### Adding the index view:
### $1/views.py
views_tmpl_file=$base_dir/metadata/views/$1/views.py
cp $views_tmpl_file $1/views.py
}

set_data_models(){ # pass app_name as a parameter.
#### Enabling DATAMODEL into admin app:
#### vulnerabilities/admin.py
admin_tmpl_file=$base_dir/metadata/models/$1/admin.py
cp $admin_tmpl_file  $1/admin.py
}

setting_catalog_index_table() { # pass app_name as a parameter.
                            # Works only for catalog app.
#### Templates:
tmpl_source_dir=$base_dir/metadata/templates/$1
tmpl_dir=$1/templates/$1
if [[ ! -d $tmpl_dir ]]; then
    mkdir -p $tmpl_dir
fi

tmpl_file=$tmpl_dir/index.html
cp $tmpl_source_dir/tmpl_index_table.html $tmpl_file

### Creating catalog app's index table: 
sed -e "s/__APP_NAME__/$1/g" -e '/__INSERT_CUSTOM_CONTENT__/ {' -e "r $tmpl_source_dir/index_table.html" -e 'd' -e '}' $tmpl_source_dir/tmpl_index_table.html > $tmpl_file
}

setting_catalog_detail_table() { # pass app_name as a parameter.
                             # Works only for catalog app.
#### Templates:
tmpl_source_dir=$base_dir/metadata/templates/$1
tmpl_dir=$1/templates/$1
if [[ ! -d $tmpl_dir ]]; then
    mkdir -p $tmpl_dir
fi

tmpl_file=$tmpl_dir/detail.html
cp $tmpl_source_dir/tmpl_detail_table.html $tmpl_file

### Creating $1 detail table
sed -e "s/__APP_NAME__/$1/g" -e '/__INSERT_CUSTOM_CONTENT__/ {' -e "r $tmpl_source_dir/detail_table.html" -e 'd' -e '}' $tmpl_source_dir/tmpl_detail_table.html > $tmpl_file
}

setting_panorama_index_table() { # pass app_name as a parameter.
                                 # Works only for catalog app.
#### Templates:
view_name=panorama
tmpl_source_dir=$base_dir/metadata/templates/$view_name
tmpl_dir=$1/templates/$view_name
if [[ ! -d $tmpl_dir ]]; then
    mkdir -p $tmpl_dir
fi

tmpl_file=$tmpl_dir/index.html
cp $tmpl_source_dir/tmpl_index_table.html $tmpl_file

### Creating catalog app's index table: 
sed -e "s/__APP_NAME__/$1/g" -e '/__INSERT_CUSTOM_CONTENT__/ {' -e "r $tmpl_source_dir/index_table.html" -e 'd' -e '}' $tmpl_source_dir/tmpl_index_table.html > $tmpl_file
}

setting_panorama_detail_table() { # pass app_name as a parameter.
                                  # Works only for catalog app.
#### Templates:
tmpl_source_dir=$base_dir/metadata/templates/$1
tmpl_dir=$1/templates/$1
if [[ ! -d $tmpl_dir ]]; then
    mkdir -p $tmpl_dir
fi

tmpl_file=$tmpl_dir/detail.html
cp $tmpl_source_dir/tmpl_detail_table.html $tmpl_file

### Creating $1 detail table
sed -e "s/__APP_NAME__/$1/g" -e '/__INSERT_CUSTOM_CONTENT__/ {' -e "r $tmpl_source_dir/detail_table.html" -e 'd' -e '}' $tmpl_source_dir/tmpl_detail_table.html > $tmpl_file
}

setting_admin_template() {
####_FIX_ to use templates?
#### Changing default admin session:
tmpl_dir=./templates/admin
if [[ ! -d $tmpl_dir ]]; then
    mkdir -p $tmpl_dir
fi
tmpl_file=$tmpl_dir/base_site.html
touch $tmpl_file

#### Setting $project_name/settings.py file:
_str_="'DIRS': \[\]" 
_str2_="'DIRS': \[os.path.join(BASE_DIR, 'templates')\]"
sed -i -e "s/$_str_/$_str2_/" $project_name/settings.py

#### base_site.html
python_path=$(python3 -c "import django; print(django.__path__[0])")
cp $python_path/contrib/admin/templates/admin/base.html $tmpl_dir
cp $python_path/contrib/admin/templates/admin/base_site.html $tmpl_file

#### Changing admin's banner name:
sed -i -e '/site-name/d' $tmpl_file
_str_="<h1 id=\"site-name\"><a href=\"{% url 'admin:index' %}\">$project_name administration</a></h1>"
sed -i -e "/block branding/a \ $_str_" $tmpl_file
}

apply_data_models() { # pass app_name as a parameter.
#### Applying the new data model:
python3 manage.py makemigrations $1
python3 manage.py sqlmigrate $1 0001
python3 manage.py migrate
}

deployment_checklist(){
#### Ensuring https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/ requirements:
#### Changing SECRET_KEY:
echo "Generating secret key..."
key=$(dd bs=4096 count=20 iflag=fullblock if=/dev/urandom 2>/dev/null | sha512sum | awk '{print $1}')
#key=$(dd bs=4096 count=5 if=/dev/urandom 2> /dev/null | strings | tr -d "\'" | tr -d '\"' | tr -d '\`' | tr '\n' ' ')
_str_="SECRET_KEY = '$key'"
sed -i -e "s/^SECRET_KEY.*/$_str_/" $project_name/settings.py

#### ALLOWED_HOSTS:
_str_="ALLOWED_HOSTS = ['localhost', '127.0.0.1']"
sed -i -e "s/^ALLOWED_HOSTS.*/$_str_/" $project_name/settings.py
}

create_test_enviroment() { # pass app_name as a parameter.
#### Enable test capabilities to the project.
app_name=$1
if [[ ! -d $app_name/fixturename ]]; then
   mkdir -p $app_name/fixturename
fi
cp $base_dir/test/data/initialcatalogdata.json $app_name/fixturename/
python3 manage.py loaddata $app_name/fixturename/initialcatalogdata.json
}

create_superuser() {
#### Set admin and start server:
python3 manage.py createsuperuser
}

run_new_project() {
echo
echo
echo "Please access http://127.0.0.1:8000/admin to start app."

python3 manage.py runserver
}

#### Running the project creation process:
#### Zero: Check project prerequs:
check_system_reqs


#### The first app in this list will be the catalog:
app_name=catalog

#### Run it in this canonical order:
#### Project configs
start_project  # Must be the first to call
start_app $app_name # pass app_name as a parameter.
setting_project_urls # no parameters are need.
add_app_to_project $app_name # pass app_name as a parameter.
defining_datamodel $app_name # pass app_name as a parameter.

#### Apps configs
setting_app_urls $app_name # pass app_name as a parameter.
setting_app_views $app_name # pass app_name as a parameter.

#### Catalog view configs
setting_catalog_index_table $app_name # pass app_name as a parameter.
setting_catalog_detail_table $app_name # pass app_name as a parameter.

#### Panorama view configs
setting_panorama_index_table $app_name # pass app_name as a parameter.
setting_panorama_detail_table $app_name # pass app_name as a parameter.

#### Admin view configs
setting_admin_template # no parameters are need.

#### Final configs
set_data_models $app_name # pass app_name as a parameter.
apply_data_models $app_name # pass app_name as a parameter.
deployment_checklist # no parameters are need.
create_superuser # no parameters are need.
create_test_enviroment $app_name # pass app_name as a parameter.
run_new_project # no parameters are need.

