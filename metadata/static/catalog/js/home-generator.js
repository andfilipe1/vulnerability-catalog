/* home-generator.js:
 * Get data and generate the graphical elements to home page.
 */

/* Vulnerability bar: */
// updating the progress-bar elements: //
url = "/catalog/vulnerability/data/json/filter/?field=risk"
var data;
d3.json(url, function(d) {
    data = d;

    for (var i in data) {
      var field = data[i].risk;
      var value = data[i].vulnerabilities;

      // updating the progrees bar attributes:
      var bar = d3.select("#vulnerabilityBar")
          .append("div")
          .attr("class", function() { if (field == "High") {
                                           return "progress-bar bg-danger"
                                       } else if (field == "Medium") {
                                           return "progress-bar bg-warning"
                                       } else if (field == "Low") {
                                           return "progress-bar bg-secondary"
                                     } })
          .attr("role", "progressbar")
          .style("width", function() { return value + "%"; })
          .attr("aria-valuenow", value)
          .attr("data-toggle", "tooltip")
          .attr("title", field + ": " + value)
          .attr("onclick", function() {
                         return "location.href=\"/catalog/panorama\""; })
          .text(field);
    }

});
/* End of Vulnerability bar: */

/* Status bar: */
// updating the progress-bar elements: //
url = "/catalog/vulnerability/data/json/filter/?field=status&countby=risk"
var data;
d3.json(url, function(d) {
    data = d;

    for (var i in data) {
      var field = data[i].status;
      var risk = data[i].risk;
      var tmp = Object.values(risk);
      var value = d3.sum(tmp);
      var tip = JSON.stringify(risk).replace(/\"/g, "\'")
                                    .replace(/\:/g, "\: ")
                                    .replace(/\,/g, "\, ");

      // updating the progrees bar attributes:
      var bar = d3.select("#statusBar")
          .append("button")
          .attr("class", function() { if (field == "Mitigated") {
                                          return "btn btn-lg btn-outline-secondary"
                                      } else if (field == "Not identified") {
                                          return "btn btn-lg btn-danger"
                                      } else if (field == "Notified") {
                                          return "btn btn-lg btn-info"
                                      } else if (field == "Risk accepted") {
                                          return "btn  btn-lg btn-warning"
                                      } else if (field == "Solved") {
                                          return "btn btn-lg btn-success"
                                      } 
                         })
          .attr("data-toggle", "collapse")
          .attr("data-target", "#text" + i)
          .text(field + ": " + value);

       var text = d3.select("#statusBar")
          .append("div")
          .attr("id", "text" + i)
          .attr("class", "collapse")
          .append("span")
          .append("strong")
          .text(tip);
    }

});

/* initializing the button's Bootstrap popovers: */
//$("#statusBar").popover({
//  selector: "[data-toggle='popover']",
//  trigger: "focus",
//  container: "body"
//})
/* End of initializing the button's Bootstrap popovers: */

/* End of Status bar: */
