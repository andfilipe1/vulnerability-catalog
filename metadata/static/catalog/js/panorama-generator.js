/*
 * Panorama constructor using d3.js, dc.js an crossfilter.js
 */
url = "/catalog/vulnerability/data/panorama/json"

// Coupling chart into the respective DOM elements:
var perimeterChart = dc.rowChart("#perimeterChart");
var riskChart = dc.pieChart("#riskChart");
var systemChart = dc.rowChart("#topSystems");
var categoryChart = dc.rowChart("#topCategories");
//var ownersChart = dc.bubbleChart("#systemsAndVulnerabilitiesChart");
var statusChart = dc.barChart("#timelineChart");

// Getting data to visualize:
d3.json(url, function(error, data) {
  if (error) throw error; 


  // Grouping all data into the ndx index: 
  var ndx = crossfilter(data);
//  var all = ndx.groupAll();

  // Perimeter chart:
  var perimeterDim = ndx.dimension(function (d) { return d["perimeter"]; })
  var perimeterGroup = perimeterDim.group();

  perimeterChart
    .x(d3.scale.linear(perimeterDim))
    .dimension(perimeterDim)
    .group(perimeterGroup)
    .elasticX(true)
    .label(function(d){ // https://stackoverflow.com/questions/30465870
            return d.key + ": " + (d.value / ndx.groupAll().reduceCount().value() * 100).toFixed(0) + "%";
        });

  // Risk chart:
  var riskDim = ndx.dimension(function (d) { return d["risk"]; })
  var riskGroup = riskDim.group();

  riskChart
    .dimension(riskDim)
    .group(riskGroup)
    .legend(dc.legend())
    .label(function(d){ // https://stackoverflow.com/questions/30465870
            return (d.value / ndx.groupAll().reduceCount().value() * 100).toFixed(0) + "%";
        });

  // System chart:
  var systemDim = ndx.dimension(function (d) { return d["system"]; })
  var systemGroup = systemDim.group();

  systemChart
    .dimension(systemDim)
    .group(systemGroup)
    .elasticX(true)
    .data(function (group) { return group.top(10); });

  // category chart:
  var categoryDim = ndx.dimension(function (d) { return d["category"]; });
  var categoryGroup = categoryDim.group();

  categoryChart
    .dimension(categoryDim)
    .group(categoryGroup)
    .elasticX(true)
    .data(function (group) { return group.top(10); });

  // Owners chart:
//  var ownersDim = ndx.dimension(function(d) { return d["owner"]; });
  // http://bl.ocks.org/jun9/5631952


  // Status chart:

  // Set the range of time x-axis:
  var timeParser = d3.time.format("%Y-%m-%d");
  var min = timeParser.parse("9999-99-99") ;
  var max = timeParser.parse("0000-00-00");
  for (var i in data) {
    var tmp = timeParser.parse(data[i]["identification_date"]);
    if (tmp <= min) {
      min = tmp;
    }
    if (tmp >= max) {
      max = tmp;
    }
  }
  
  var statusDim = ndx.dimension(function(d) { return d["category"]; });
  var statusGroup = statusDim.group().reduceCount(function (d) { return d["category"];});

  statusChart 
    .x(d3.time.scale().domain([min, max]))
    .dimension(statusDim)
    .group(statusGroup);

  // Rendering all charts:
  dc.renderAll();
});

