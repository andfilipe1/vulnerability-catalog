from django.views import View
from django.views.generic.edit import FormView

from django.http import HttpRequest, HttpResponse
from django.shortcuts import redirect
from django.utils.http import is_safe_url

from django.contrib.auth import REDIRECT_FIELD_NAME, authenticate, login, logout

from django.utils.decorators import method_decorator
from django.views.decorators.cache import never_cache
from django.views.decorators.csrf import csrf_protect
from django.views.decorators.debug import sensitive_post_parameters

from django.contrib.auth.forms import AuthenticationForm

class LoginView(FormView):

    template_name = 'catalog/login.html'
    success_url = '/catalog/'
    form_class = AuthenticationForm
    redirect_field_name = REDIRECT_FIELD_NAME
   

    @method_decorator(sensitive_post_parameters('password'))
    @method_decorator(csrf_protect)
    @method_decorator(never_cache)
    def dispatch(self, request, *args, **kwargs):
        return super(LoginView, self).dispatch(request, *args, **kwargs)


    def form_valid(self, form):
        authenticate(self.request)
        return super(LoginView, self).form_valid(form)
   
    def get_success_url(self):
        redirect_to = self.request.POST.get(self.redirect_field_name)
        if not is_safe_url(url=redirect_to, host=self.request.get_host()):
            redirect_to = self.success_url
        return redirect_to
 
class LogoutView(View):

    def logout_user(HttpRequest):
        redirect_url = '/catalog/accounts/login/'
        logout(HttpRequest)
        return redirect(redirect_url)


