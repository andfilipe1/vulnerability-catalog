from django.views.generic import ListView, DetailView
from django.utils.decorators import method_decorator
from django.contrib.auth.decorators import login_required

from .models import Vulnerability

from .crudViews import *
from .dataViews import *
from .authViews import *
from .artifactsViews import *
from .dataViews import *
from .panoramaViews import *


login_page = 'accounts/login'

@method_decorator(login_required(login_url=login_page), name="dispatch")
class IndexView(ListView):
    ### An rendered index with all vulnerabilities.
    template_name = 'catalog/index.html'
    context_object_name = 'vulnerability_list'

    def get_queryset(self):
        '''Enables to pass ?start=<int>&stop=<int> to perform the search.'''
        '''E.g: call it in url as {% url 'catalog:index' %}?start=10&stop=20'''
        #### https://github.com/daavelino/vulnerability-catalog/issues/1    
        if not self.request.user.is_authenticated:
            return HttpResponseForbidden()

        start = self.request.GET.get('start')
        stop = self.request.GET.get('stop')

        if not start:
            start = 0
        if not stop:
            stop = int(start) + 10
         
        start = int(start)
        stop = int(stop)

        return Vulnerability.objects.order_by('-identification_date')[start:stop].all()

@method_decorator(login_required(login_url=login_page), name="dispatch")
class DetailView(DetailView):
    ### An rendered template to show a given vulnerability in detail.
    model = Vulnerability
    template_name = 'catalog/detail.html'

@method_decorator(login_required(login_url=login_page), name="dispatch")
class HomeView(ListView):
    ### The homepage template.
    model = Vulnerability
    template_name = 'catalog/home.html'

